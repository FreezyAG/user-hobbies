{
  "env": {
    "node": true
  },
  "extends": [
    "airbnb/base",
    "plugin:@typescript-eslint/recommended",
    "prettier/@typescript-eslint",
    "plugin:prettier/recommended",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2018,
    "ecmaFeatures": {
      "experimentalObjectRestSpread": true
    },
    "project": "./tsconfig.json",
    "tsconfigRootDir": "./",
    "sourceType": "module"
  },
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "node": {
        "extensions": [".js", ".ts", ".tsx"]
      }
    }
  },
  "plugins": ["import", "@typescript-eslint"],
  "rules": {
    "no-nested-ternary": "off",
    "no-plusplus": "off",
    "import/prefer-default-export": "off",
    "linebreak-style": "off",
    "arrow-body-style": "off",
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": ["webpack.*.ts"],
        "optionalDependencies": false,
        "peerDependencies": false
      }
    ],
    "class-methods-use-this": "off",
    "no-underscore-dangle": "off",
    "no-unused-vars": "error",
    "no-restricted-syntax": [
      "error",
      {
        "selector": "ForInStatement",
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
      },
      {
        "selector": "LabeledStatement",
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      },
      {
        "selector": "WithStatement",
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }
    ],
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-member-accessibility": "off",
    "@typescript-eslint/interface-name-prefix": "warn",
    "@typescript-eslint/no-empty-interface": "warn",
    "@typescript-eslint/no-use-before-define": "warn",
    "no-useless-constructor": "off"
  }
}
